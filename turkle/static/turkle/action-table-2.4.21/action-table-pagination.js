var f=Object.defineProperty;var d=(r,a,s)=>a in r?f(r,a,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[a]=s;var c=(r,a,s)=>(d(r,typeof a!="symbol"?a+"":a,s),s);class m extends HTMLElement{constructor(){super();const a=this.closest("action-table"),{pagination:s}=a,t=i=>i.map(e=>`<option ${s===e?"selected":""}>${e}</option>`).join(""),n=this.options.length>0?`<label class="pagination-select"><span>${this.getAttribute("label")||"Rows per:"}</span> <select>${t(this.options)}</select></label>`:"";this.innerHTML=n,this.addEventListener("change",i=>{if(i.target instanceof HTMLSelectElement){const e=Number(i.target.value);isNaN(e)||(a.pagination=e)}})}get options(){const a=this.getAttribute("options");if(a){const s=a.split(",").map(t=>Number(t)).filter(t=>!isNaN(t));if(s.length>0)return s}return[]}}customElements.define("action-table-pagination-options",m);class $ extends HTMLElement{constructor(){super();c(this,"page",1);c(this,"numberOfPages",1);c(this,"group",1);c(this,"maxGroups",1);c(this,"actionTable",this.closest("action-table"));c(this,"rowsVisible",0);this.addEventListeners()}connectedCallback(){this.render()}render(){const{page:s,numberOfPages:t}=this.actionTable;this.numberOfPages=t,this.page=s;const n=Number(this.getAttribute("max-buttons"))||10,i=Math.ceil(t/n);let e=this.group;e>i?e=i:e<1&&(e=1);const l=(e-1)*n+1;function p(o,b="",h){return`<button type="button" class="${s===o?`active ${b}`:`${b}`}" data-page="${o}" title="${b}">${h||o}</button>`}let g="";if(e>1&&(g+=`${p(1,"first")}${p(l-1,"prev","...")}`),t>0){for(let o=l;o<=t;o++)if(g+=p(o),o!==t&&o>=n*e){g+=`${p(o+1,"next","...")}${p(t,"last")}`;break}}const u=o=>` class="pagination-${o}"`;this.innerHTML=`<span${u("label")}></span> <span${u("buttons")}>${g}</span>`,this.changeLabel(s),this.group=e,this.maxGroups=i}changeLabel(s){const{pagination:t,rowsSet:n}=this.actionTable;this.rowsVisible=n.size;const e=(this.getAttribute("label")||"Showing {rows} of {total}:").replace("{rows}",`${s*t-t+1}-${s*t}`).replace("{total}",`${n.size}`),l=this.querySelector("span.pagination-label");l&&(l.textContent=e)}addEventListeners(){this.addEventListener("click",s=>{const t=s.target;if(t instanceof HTMLButtonElement){let n=1;t.dataset.page&&(n=Number(t.dataset.page),t.classList.add("active"),this.querySelectorAll("button").forEach(l=>{l!==t&&l.classList.remove("active")}));let i=this.group;const e=l=>t.classList.contains(l);e("next")&&i++,e("prev")&&i--,e("first")&&(i=1),e("last")&&(i=this.maxGroups),this.actionTable.page=this.page=n,this.changeLabel(n),this.group!==i&&(this.group=i,this.render())}}),this.actionTable.addEventListener("action-table",s=>{const{page:t,pagination:n,numberOfPages:i,rowsVisible:e}=s.detail;(t&&t!==this.page||i!==void 0&&i!==this.numberOfPages||n!==void 0||e!==this.rowsVisible)&&this.render()})}}customElements.define("action-table-pagination",$);
//# sourceMappingURL=action-table-pagination.js.map
